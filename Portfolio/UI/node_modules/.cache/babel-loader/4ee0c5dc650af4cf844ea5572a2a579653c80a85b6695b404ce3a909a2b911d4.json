{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arsenije\\\\source\\\\repos\\\\CloudProjekat\\\\Portfolio\\\\UI\\\\src\\\\Components\\\\PortfolioPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../styles/PortfolioPage.css';\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PortfolioPage = () => {\n  _s();\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('user')));\n  const [cryptos, setCryptos] = useState([]);\n  const [cryptoSymbol, setCryptoSymbol] = useState('');\n  const [cryptoName, setCryptoName] = useState('');\n  const [cryptoPrice, setCryptoPrice] = useState(0);\n  const [cryptoAmount, setCryptoAmount] = useState(0);\n  const [cryptoOptions, setCryptoOptions] = useState([]);\n  const symbolToName = {\n    BTC: 'Bitcoin',\n    ETH: 'Ethereum',\n    USDT: 'Tether',\n    BNB: 'Binance Coin',\n    SOL: 'Solana',\n    STETH: 'Staked Ether',\n    USDC: 'USD Coin',\n    XRP: 'XRP',\n    DOGE: 'Dogecoin',\n    TON: 'TON Crystal',\n    ADA: 'Cardano',\n    AVAX: 'Avalanche',\n    SHIB: 'Shiba Inu',\n    WBTC: 'Wrapped Bitcoin',\n    TRX: 'TRON',\n    DOT: 'Polkadot',\n    BCH: 'Bitcoin Cash',\n    LINK: 'Chainlink',\n    NEAR: 'Near Protocol',\n    UNI: 'Uniswap'\n  };\n  useEffect(() => {\n    if (user) {\n      getAllCryptos(user.email);\n      getTopCryptoPrices().then(prices => {\n        if (prices) {\n          const totalValue = calculateTotalPortfolioValue(cryptos, prices);\n          console.log('Ukupna vrednost portfolija:', totalValue);\n        }\n      });\n    }\n  }, [user]);\n  useEffect(() => {\n    if (cryptoSymbol) {\n      getCryptoPrice(cryptoSymbol);\n    }\n  }, [cryptoSymbol]);\n  useEffect(() => {\n    if (user) {\n      getAllCryptos(user.email);\n      getTopCryptoSymbols();\n    }\n  }, [user]);\n  const getAllCryptos = async userEmail => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/crypto?userEmail=${userEmail}`);\n      setCryptos(response.data);\n    } catch (error) {\n      console.error('Error fetching cryptos:', error);\n    }\n  };\n  const handleSellCrypto = async () => {\n    try {\n      const existingCrypto = cryptos.find(c => c.Symbol === cryptoSymbol);\n      if (existingCrypto) {\n        await axios.post(`http://localhost:5000/api/crypto/sell`, {\n          userEmail: user.email,\n          symbol: cryptoSymbol,\n          amount: cryptoAmount,\n          price: cryptoPrice\n        });\n      } else {\n        console.error('Kriptovaluta koju pokušavate da prodate nije pronađena.');\n      }\n      getAllCryptos(user.email);\n    } catch (error) {\n      console.error('Greška prilikom prodaje kriptovalute:', error);\n    }\n  };\n  const getTopCryptoPrices = async () => {\n    try {\n      const response = await axios.get('https://api.coingecko.com/api/v3/coins/markets', {\n        params: {\n          vs_currency: 'usd',\n          per_page: 20,\n          page: 1,\n          order: 'market_cap_desc',\n          sparkline: false\n        }\n      });\n      const prices = response.data.reduce((acc, crypto) => {\n        acc[crypto.symbol] = crypto.current_price;\n        return acc;\n      }, {});\n      return prices;\n    } catch (error) {\n      console.error('Greška prilikom dobavljanja cena:', error);\n      return null;\n    }\n  };\n  const calculateTotalPortfolioValue = (cryptos, prices) => {\n    let totalValue = 0;\n    cryptos.forEach(crypto => {\n      const price = prices[crypto.Symbol];\n      if (price) {\n        totalValue += crypto.Amount * price;\n      }\n    });\n    return totalValue;\n  };\n  const getTopCryptoSymbols = async () => {\n    try {\n      const response = await axios.get('https://api.coingecko.com/api/v3/coins/markets', {\n        params: {\n          vs_currency: 'usd',\n          per_page: 20,\n          page: 1,\n          order: 'market_cap_desc',\n          sparkline: false\n        }\n      });\n      const symbols = response.data.map(crypto => crypto.symbol);\n      setCryptoOptions(symbols);\n    } catch (error) {\n      console.error('Error fetching top crypto symbols:', error);\n    }\n  };\n  const getCryptoPrice = async symbol => {\n    try {\n      var _response$data$symbol;\n      const response = await axios.get(`https://api.coingecko.com/api/v3/simple/price?ids=${symbol}&vs_currencies=usd`);\n      const price = (_response$data$symbol = response.data[symbol]) === null || _response$data$symbol === void 0 ? void 0 : _response$data$symbol.usd;\n      setCryptoPrice(price);\n      setCryptoName(symbolToName[symbol] || symbol.toUpperCase());\n    } catch (error) {\n      console.error(`Error fetching price for ${symbol}:`, error);\n      setCryptoName('');\n    }\n  };\n  const handleAddOrBuyCrypto = async () => {\n    try {\n      const existingCrypto = cryptos.find(c => c.Symbol === cryptoSymbol);\n      if (existingCrypto) {\n        await axios.post(`http://localhost:5000/api/crypto/buy`, {\n          userEmail: user.email,\n          symbol: cryptoSymbol,\n          amount: cryptoAmount,\n          price: cryptoPrice\n        });\n      } else {\n        await axios.post(`http://localhost:5000/api/crypto`, {\n          userEmail: user.email,\n          name: cryptoName,\n          currentPrice: cryptoPrice,\n          symbol: cryptoSymbol,\n          amount: cryptoAmount\n        });\n      }\n      getAllCryptos(user.email);\n    } catch (error) {\n      console.error('Error adding or buying crypto:', error);\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Niste ulogovani.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 14\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Dobrodo\\u0161li, \", user.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Ovo je va\\u0161a portfolio stranica.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Va\\u0161e kriptovalute:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        textAlign: 'left'\n      },\n      children: cryptos.map(crypto => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [crypto.Name, \" (\", crypto.Symbol, \") - \", crypto.Amount, \" - \", crypto.CurrentPrice]\n      }, crypto.RowKey, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"crypto-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Unesite informacije o kriptovaluti:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Symbol:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: cryptoSymbol,\n          onChange: e => setCryptoSymbol(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Izaberite simbol\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), cryptoOptions.map(symbol => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: symbol,\n            children: symbol.toUpperCase()\n          }, symbol, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Ime:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: cryptoName,\n          onChange: e => setCryptoName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Cena:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: cryptoPrice,\n          onChange: e => setCryptoPrice(parseFloat(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Koli\\u010Dina:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: cryptoAmount,\n          onChange: e => setCryptoAmount(parseFloat(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleAddOrBuyCrypto,\n        children: \"Buy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSellCrypto,\n        children: \"Prodaj\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 7\n  }, this);\n};\n_s(PortfolioPage, \"InHJPbxcSVuE3r6LpreRIF3FdCU=\");\n_c = PortfolioPage;\nexport default PortfolioPage;\nvar _c;\n$RefreshReg$(_c, \"PortfolioPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","Header","jsxDEV","_jsxDEV","PortfolioPage","_s","user","setUser","JSON","parse","localStorage","getItem","cryptos","setCryptos","cryptoSymbol","setCryptoSymbol","cryptoName","setCryptoName","cryptoPrice","setCryptoPrice","cryptoAmount","setCryptoAmount","cryptoOptions","setCryptoOptions","symbolToName","BTC","ETH","USDT","BNB","SOL","STETH","USDC","XRP","DOGE","TON","ADA","AVAX","SHIB","WBTC","TRX","DOT","BCH","LINK","NEAR","UNI","getAllCryptos","email","getTopCryptoPrices","then","prices","totalValue","calculateTotalPortfolioValue","console","log","getCryptoPrice","getTopCryptoSymbols","userEmail","response","get","data","error","handleSellCrypto","existingCrypto","find","c","Symbol","post","symbol","amount","price","params","vs_currency","per_page","page","order","sparkline","reduce","acc","crypto","current_price","forEach","Amount","symbols","map","_response$data$symbol","usd","toUpperCase","handleAddOrBuyCrypto","name","currentPrice","handleLogout","removeItem","children","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","onClick","Name","CurrentPrice","RowKey","className","value","onChange","e","target","type","parseFloat","_c","$RefreshReg$"],"sources":["C:/Users/Arsenije/source/repos/CloudProjekat/Portfolio/UI/src/Components/PortfolioPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport '../styles/PortfolioPage.css';\r\nimport Header from './Header';\r\n\r\nconst PortfolioPage = () => {\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('user')));\r\n    const [cryptos, setCryptos] = useState([]);\r\n    const [cryptoSymbol, setCryptoSymbol] = useState('');\r\n    const [cryptoName, setCryptoName] = useState('');\r\n    const [cryptoPrice, setCryptoPrice] = useState(0);\r\n    const [cryptoAmount, setCryptoAmount] = useState(0);\r\n    const [cryptoOptions, setCryptoOptions] = useState([]);\r\n\r\n    const symbolToName = {\r\n        BTC: 'Bitcoin', ETH: 'Ethereum', USDT: 'Tether', BNB: 'Binance Coin', SOL: 'Solana', STETH: 'Staked Ether', USDC: 'USD Coin', XRP: 'XRP', DOGE: 'Dogecoin', TON: 'TON Crystal', ADA: 'Cardano', AVAX: 'Avalanche', SHIB: 'Shiba Inu', WBTC: 'Wrapped Bitcoin', TRX: 'TRON', DOT: 'Polkadot', BCH: 'Bitcoin Cash', LINK: 'Chainlink', NEAR: 'Near Protocol', UNI: 'Uniswap'\r\n      };\r\n\r\n      useEffect(() => {\r\n        if (user) {\r\n          getAllCryptos(user.email);\r\n          getTopCryptoPrices().then(prices => {\r\n            if (prices) {\r\n              const totalValue = calculateTotalPortfolioValue(cryptos, prices);\r\n              console.log('Ukupna vrednost portfolija:', totalValue);\r\n            }\r\n          });\r\n        }\r\n      }, [user]);\r\n      \r\n\r\n      useEffect(() => {\r\n        if (cryptoSymbol) {\r\n          getCryptoPrice(cryptoSymbol);\r\n        }\r\n      }, [cryptoSymbol]);\r\n\r\n    useEffect(() => {\r\n      if (user) {\r\n        getAllCryptos(user.email);\r\n        getTopCryptoSymbols();\r\n      }\r\n    }, [user]);\r\n  \r\n    const getAllCryptos = async (userEmail) => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/crypto?userEmail=${userEmail}`);\r\n        setCryptos(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching cryptos:', error);\r\n      }\r\n    };\r\n\r\n    const handleSellCrypto = async () => {\r\n        try {\r\n          const existingCrypto = cryptos.find(c => c.Symbol === cryptoSymbol);\r\n      \r\n          if (existingCrypto) {\r\n            await axios.post(`http://localhost:5000/api/crypto/sell`, {\r\n              userEmail: user.email,\r\n              symbol: cryptoSymbol,\r\n              amount: cryptoAmount,\r\n              price: cryptoPrice\r\n            });\r\n          } else {\r\n            console.error('Kriptovaluta koju pokušavate da prodate nije pronađena.');\r\n          }\r\n          getAllCryptos(user.email);\r\n        } catch (error) {\r\n          console.error('Greška prilikom prodaje kriptovalute:', error);\r\n        }\r\n      };      \r\n  \r\n      const getTopCryptoPrices = async () => {\r\n        try {\r\n          const response = await axios.get('https://api.coingecko.com/api/v3/coins/markets', {\r\n            params: {\r\n              vs_currency: 'usd',\r\n              per_page: 20,\r\n              page: 1,\r\n              order: 'market_cap_desc',\r\n              sparkline: false\r\n            }\r\n          });\r\n          const prices = response.data.reduce((acc, crypto) => {\r\n            acc[crypto.symbol] = crypto.current_price;\r\n            return acc;\r\n          }, {});\r\n          return prices;\r\n        } catch (error) {\r\n          console.error('Greška prilikom dobavljanja cena:', error);\r\n          return null;\r\n        }\r\n      };\r\n\r\n      const calculateTotalPortfolioValue = (cryptos, prices) => {\r\n        let totalValue = 0;\r\n        cryptos.forEach(crypto => {\r\n          const price = prices[crypto.Symbol];\r\n          if (price) {\r\n            totalValue += crypto.Amount * price;\r\n          }\r\n        });\r\n        return totalValue;\r\n      };   \r\n\r\n    const getTopCryptoSymbols = async () => {\r\n      try {\r\n        const response = await axios.get('https://api.coingecko.com/api/v3/coins/markets', {\r\n          params: {\r\n            vs_currency: 'usd',\r\n            per_page: 20,\r\n            page: 1,\r\n            order: 'market_cap_desc',\r\n            sparkline: false\r\n          }\r\n        });\r\n        const symbols = response.data.map(crypto => crypto.symbol);\r\n        setCryptoOptions(symbols);\r\n      } catch (error) {\r\n        console.error('Error fetching top crypto symbols:', error);\r\n      }\r\n    };\r\n  \r\n    const getCryptoPrice = async (symbol) => {\r\n        try {\r\n          const response = await axios.get(`https://api.coingecko.com/api/v3/simple/price?ids=${symbol}&vs_currencies=usd`);\r\n          const price = response.data[symbol]?.usd;\r\n          setCryptoPrice(price);\r\n          setCryptoName(symbolToName[symbol] || symbol.toUpperCase());\r\n        } catch (error) {\r\n          console.error(`Error fetching price for ${symbol}:`, error);\r\n          setCryptoName('');\r\n        }\r\n    };      \r\n  \r\n    const handleAddOrBuyCrypto = async () => {\r\n      try {\r\n        const existingCrypto = cryptos.find(c => c.Symbol === cryptoSymbol);\r\n  \r\n        if (existingCrypto) {\r\n          await axios.post(`http://localhost:5000/api/crypto/buy`, {\r\n            userEmail: user.email,\r\n            symbol: cryptoSymbol,\r\n            amount: cryptoAmount,\r\n            price: cryptoPrice\r\n          });\r\n        } else {\r\n          await axios.post(`http://localhost:5000/api/crypto`, {\r\n            userEmail: user.email,\r\n            name: cryptoName,\r\n            currentPrice: cryptoPrice,\r\n            symbol: cryptoSymbol,\r\n            amount: cryptoAmount\r\n          });\r\n        }\r\n        getAllCryptos(user.email);\r\n      } catch (error) {\r\n        console.error('Error adding or buying crypto:', error);\r\n      }\r\n    };\r\n  \r\n    const handleLogout = () => {\r\n      localStorage.removeItem('user');\r\n      setUser(null);\r\n    };\r\n  \r\n    if (!user) {\r\n      return <p>Niste ulogovani.</p>;\r\n    }\r\n  \r\n    return (\r\n      <div style={{ textAlign: 'center' }}>\r\n        <Header />\r\n        <h2>Dobrodošli, {user.email}</h2>\r\n        <button onClick={handleLogout}>Logout</button>\r\n        <p>Ovo je vaša portfolio stranica.</p>\r\n        <h3>Vaše kriptovalute:</h3>\r\n        <ul style={{ textAlign: 'left' }}>\r\n          {cryptos.map(crypto => (\r\n            <li key={crypto.RowKey}>\r\n              {crypto.Name} ({crypto.Symbol}) - {crypto.Amount} - {crypto.CurrentPrice}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <form className=\"crypto-form\">\r\n          <h3>Unesite informacije o kriptovaluti:</h3>\r\n          <label>\r\n            Symbol:\r\n            <select value={cryptoSymbol} onChange={e => setCryptoSymbol(e.target.value)}>\r\n              <option value=\"\">Izaberite simbol</option>\r\n              {cryptoOptions.map(symbol => (\r\n                <option key={symbol} value={symbol}>{symbol.toUpperCase()}</option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n          <br />\r\n          <label>\r\n            Ime:\r\n            <input\r\n              type=\"text\"\r\n              value={cryptoName}\r\n              onChange={e => setCryptoName(e.target.value)}\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            Cena:\r\n            <input\r\n              type=\"number\"\r\n              value={cryptoPrice}\r\n              onChange={e => setCryptoPrice(parseFloat(e.target.value))}\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            Količina:\r\n            <input\r\n              type=\"number\"\r\n              value={cryptoAmount}\r\n              onChange={e => setCryptoAmount(parseFloat(e.target.value))}\r\n            />\r\n          </label>\r\n          <br />\r\n          <button type=\"button\" onClick={handleAddOrBuyCrypto}>Buy</button>\r\n          <button type=\"button\" onClick={handleSellCrypto}>Prodaj</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default PortfolioPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,6BAA6B;AACpC,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAACU,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;EAC1E,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACkB,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACsB,YAAY,EAAEC,eAAe,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACwB,aAAa,EAAEC,gBAAgB,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAM0B,YAAY,GAAG;IACjBC,GAAG,EAAE,SAAS;IAAEC,GAAG,EAAE,UAAU;IAAEC,IAAI,EAAE,QAAQ;IAAEC,GAAG,EAAE,cAAc;IAAEC,GAAG,EAAE,QAAQ;IAAEC,KAAK,EAAE,cAAc;IAAEC,IAAI,EAAE,UAAU;IAAEC,GAAG,EAAE,KAAK;IAAEC,IAAI,EAAE,UAAU;IAAEC,GAAG,EAAE,aAAa;IAAEC,GAAG,EAAE,SAAS;IAAEC,IAAI,EAAE,WAAW;IAAEC,IAAI,EAAE,WAAW;IAAEC,IAAI,EAAE,iBAAiB;IAAEC,GAAG,EAAE,MAAM;IAAEC,GAAG,EAAE,UAAU;IAAEC,GAAG,EAAE,cAAc;IAAEC,IAAI,EAAE,WAAW;IAAEC,IAAI,EAAE,eAAe;IAAEC,GAAG,EAAE;EACnW,CAAC;EAED7C,SAAS,CAAC,MAAM;IACd,IAAIO,IAAI,EAAE;MACRuC,aAAa,CAACvC,IAAI,CAACwC,KAAK,CAAC;MACzBC,kBAAkB,CAAC,CAAC,CAACC,IAAI,CAACC,MAAM,IAAI;QAClC,IAAIA,MAAM,EAAE;UACV,MAAMC,UAAU,GAAGC,4BAA4B,CAACvC,OAAO,EAAEqC,MAAM,CAAC;UAChEG,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEH,UAAU,CAAC;QACxD;MACF,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAAC5C,IAAI,CAAC,CAAC;EAGVP,SAAS,CAAC,MAAM;IACd,IAAIe,YAAY,EAAE;MAChBwC,cAAc,CAACxC,YAAY,CAAC;IAC9B;EACF,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAEpBf,SAAS,CAAC,MAAM;IACd,IAAIO,IAAI,EAAE;MACRuC,aAAa,CAACvC,IAAI,CAACwC,KAAK,CAAC;MACzBS,mBAAmB,CAAC,CAAC;IACvB;EACF,CAAC,EAAE,CAACjD,IAAI,CAAC,CAAC;EAEV,MAAMuC,aAAa,GAAG,MAAOW,SAAS,IAAK;IACzC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMzD,KAAK,CAAC0D,GAAG,CAAE,8CAA6CF,SAAU,EAAC,CAAC;MAC3F3C,UAAU,CAAC4C,QAAQ,CAACE,IAAI,CAAC;IAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdR,OAAO,CAACQ,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;EAED,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,cAAc,GAAGlD,OAAO,CAACmD,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,MAAM,KAAKnD,YAAY,CAAC;MAEnE,IAAIgD,cAAc,EAAE;QAClB,MAAM9D,KAAK,CAACkE,IAAI,CAAE,uCAAsC,EAAE;UACxDV,SAAS,EAAElD,IAAI,CAACwC,KAAK;UACrBqB,MAAM,EAAErD,YAAY;UACpBsD,MAAM,EAAEhD,YAAY;UACpBiD,KAAK,EAAEnD;QACT,CAAC,CAAC;MACJ,CAAC,MAAM;QACLkC,OAAO,CAACQ,KAAK,CAAC,yDAAyD,CAAC;MAC1E;MACAf,aAAa,CAACvC,IAAI,CAACwC,KAAK,CAAC;IAC3B,CAAC,CAAC,OAAOc,KAAK,EAAE;MACdR,OAAO,CAACQ,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;IAC/D;EACF,CAAC;EAED,MAAMb,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACF,MAAMU,QAAQ,GAAG,MAAMzD,KAAK,CAAC0D,GAAG,CAAC,gDAAgD,EAAE;QACjFY,MAAM,EAAE;UACNC,WAAW,EAAE,KAAK;UAClBC,QAAQ,EAAE,EAAE;UACZC,IAAI,EAAE,CAAC;UACPC,KAAK,EAAE,iBAAiB;UACxBC,SAAS,EAAE;QACb;MACF,CAAC,CAAC;MACF,MAAM1B,MAAM,GAAGQ,QAAQ,CAACE,IAAI,CAACiB,MAAM,CAAC,CAACC,GAAG,EAAEC,MAAM,KAAK;QACnDD,GAAG,CAACC,MAAM,CAACX,MAAM,CAAC,GAAGW,MAAM,CAACC,aAAa;QACzC,OAAOF,GAAG;MACZ,CAAC,EAAE,CAAC,CAAC,CAAC;MACN,OAAO5B,MAAM;IACf,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdR,OAAO,CAACQ,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MACzD,OAAO,IAAI;IACb;EACF,CAAC;EAED,MAAMT,4BAA4B,GAAGA,CAACvC,OAAO,EAAEqC,MAAM,KAAK;IACxD,IAAIC,UAAU,GAAG,CAAC;IAClBtC,OAAO,CAACoE,OAAO,CAACF,MAAM,IAAI;MACxB,MAAMT,KAAK,GAAGpB,MAAM,CAAC6B,MAAM,CAACb,MAAM,CAAC;MACnC,IAAII,KAAK,EAAE;QACTnB,UAAU,IAAI4B,MAAM,CAACG,MAAM,GAAGZ,KAAK;MACrC;IACF,CAAC,CAAC;IACF,OAAOnB,UAAU;EACnB,CAAC;EAEH,MAAMK,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMzD,KAAK,CAAC0D,GAAG,CAAC,gDAAgD,EAAE;QACjFY,MAAM,EAAE;UACNC,WAAW,EAAE,KAAK;UAClBC,QAAQ,EAAE,EAAE;UACZC,IAAI,EAAE,CAAC;UACPC,KAAK,EAAE,iBAAiB;UACxBC,SAAS,EAAE;QACb;MACF,CAAC,CAAC;MACF,MAAMO,OAAO,GAAGzB,QAAQ,CAACE,IAAI,CAACwB,GAAG,CAACL,MAAM,IAAIA,MAAM,CAACX,MAAM,CAAC;MAC1D5C,gBAAgB,CAAC2D,OAAO,CAAC;IAC3B,CAAC,CAAC,OAAOtB,KAAK,EAAE;MACdR,OAAO,CAACQ,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC5D;EACF,CAAC;EAED,MAAMN,cAAc,GAAG,MAAOa,MAAM,IAAK;IACrC,IAAI;MAAA,IAAAiB,qBAAA;MACF,MAAM3B,QAAQ,GAAG,MAAMzD,KAAK,CAAC0D,GAAG,CAAE,qDAAoDS,MAAO,oBAAmB,CAAC;MACjH,MAAME,KAAK,IAAAe,qBAAA,GAAG3B,QAAQ,CAACE,IAAI,CAACQ,MAAM,CAAC,cAAAiB,qBAAA,uBAArBA,qBAAA,CAAuBC,GAAG;MACxClE,cAAc,CAACkD,KAAK,CAAC;MACrBpD,aAAa,CAACO,YAAY,CAAC2C,MAAM,CAAC,IAAIA,MAAM,CAACmB,WAAW,CAAC,CAAC,CAAC;IAC7D,CAAC,CAAC,OAAO1B,KAAK,EAAE;MACdR,OAAO,CAACQ,KAAK,CAAE,4BAA2BO,MAAO,GAAE,EAAEP,KAAK,CAAC;MAC3D3C,aAAa,CAAC,EAAE,CAAC;IACnB;EACJ,CAAC;EAED,MAAMsE,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI;MACF,MAAMzB,cAAc,GAAGlD,OAAO,CAACmD,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,MAAM,KAAKnD,YAAY,CAAC;MAEnE,IAAIgD,cAAc,EAAE;QAClB,MAAM9D,KAAK,CAACkE,IAAI,CAAE,sCAAqC,EAAE;UACvDV,SAAS,EAAElD,IAAI,CAACwC,KAAK;UACrBqB,MAAM,EAAErD,YAAY;UACpBsD,MAAM,EAAEhD,YAAY;UACpBiD,KAAK,EAAEnD;QACT,CAAC,CAAC;MACJ,CAAC,MAAM;QACL,MAAMlB,KAAK,CAACkE,IAAI,CAAE,kCAAiC,EAAE;UACnDV,SAAS,EAAElD,IAAI,CAACwC,KAAK;UACrB0C,IAAI,EAAExE,UAAU;UAChByE,YAAY,EAAEvE,WAAW;UACzBiD,MAAM,EAAErD,YAAY;UACpBsD,MAAM,EAAEhD;QACV,CAAC,CAAC;MACJ;MACAyB,aAAa,CAACvC,IAAI,CAACwC,KAAK,CAAC;IAC3B,CAAC,CAAC,OAAOc,KAAK,EAAE;MACdR,OAAO,CAACQ,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD;EACF,CAAC;EAED,MAAM8B,YAAY,GAAGA,CAAA,KAAM;IACzBhF,YAAY,CAACiF,UAAU,CAAC,MAAM,CAAC;IAC/BpF,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,IAAI,CAACD,IAAI,EAAE;IACT,oBAAOH,OAAA;MAAAyF,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAChC;EAEA,oBACE7F,OAAA;IAAK8F,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAS,CAAE;IAAAN,QAAA,gBAClCzF,OAAA,CAACF,MAAM;MAAA4F,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACV7F,OAAA;MAAAyF,QAAA,GAAI,mBAAY,EAACtF,IAAI,CAACwC,KAAK;IAAA;MAAA+C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACjC7F,OAAA;MAAQgG,OAAO,EAAET,YAAa;MAAAE,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9C7F,OAAA;MAAAyF,QAAA,EAAG;IAA+B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACtC7F,OAAA;MAAAyF,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3B7F,OAAA;MAAI8F,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAN,QAAA,EAC9BhF,OAAO,CAACuE,GAAG,CAACL,MAAM,iBACjB3E,OAAA;QAAAyF,QAAA,GACGd,MAAM,CAACsB,IAAI,EAAC,IAAE,EAACtB,MAAM,CAACb,MAAM,EAAC,MAAI,EAACa,MAAM,CAACG,MAAM,EAAC,KAAG,EAACH,MAAM,CAACuB,YAAY;MAAA,GADjEvB,MAAM,CAACwB,MAAM;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAElB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACL7F,OAAA;MAAMoG,SAAS,EAAC,aAAa;MAAAX,QAAA,gBAC3BzF,OAAA;QAAAyF,QAAA,EAAI;MAAmC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5C7F,OAAA;QAAAyF,QAAA,GAAO,SAEL,eAAAzF,OAAA;UAAQqG,KAAK,EAAE1F,YAAa;UAAC2F,QAAQ,EAAEC,CAAC,IAAI3F,eAAe,CAAC2F,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAAAZ,QAAA,gBAC1EzF,OAAA;YAAQqG,KAAK,EAAC,EAAE;YAAAZ,QAAA,EAAC;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACzC1E,aAAa,CAAC6D,GAAG,CAAChB,MAAM,iBACvBhE,OAAA;YAAqBqG,KAAK,EAAErC,MAAO;YAAAyB,QAAA,EAAEzB,MAAM,CAACmB,WAAW,CAAC;UAAC,GAA5CnB,MAAM;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAA+C,CACnE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACR7F,OAAA;QAAA0F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACN7F,OAAA;QAAAyF,QAAA,GAAO,MAEL,eAAAzF,OAAA;UACEyG,IAAI,EAAC,MAAM;UACXJ,KAAK,EAAExF,UAAW;UAClByF,QAAQ,EAAEC,CAAC,IAAIzF,aAAa,CAACyF,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACR7F,OAAA;QAAA0F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACN7F,OAAA;QAAAyF,QAAA,GAAO,OAEL,eAAAzF,OAAA;UACEyG,IAAI,EAAC,QAAQ;UACbJ,KAAK,EAAEtF,WAAY;UACnBuF,QAAQ,EAAEC,CAAC,IAAIvF,cAAc,CAAC0F,UAAU,CAACH,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACR7F,OAAA;QAAA0F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACN7F,OAAA;QAAAyF,QAAA,GAAO,gBAEL,eAAAzF,OAAA;UACEyG,IAAI,EAAC,QAAQ;UACbJ,KAAK,EAAEpF,YAAa;UACpBqF,QAAQ,EAAEC,CAAC,IAAIrF,eAAe,CAACwF,UAAU,CAACH,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACR7F,OAAA;QAAA0F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACN7F,OAAA;QAAQyG,IAAI,EAAC,QAAQ;QAACT,OAAO,EAAEZ,oBAAqB;QAAAK,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACjE7F,OAAA;QAAQyG,IAAI,EAAC,QAAQ;QAACT,OAAO,EAAEtC,gBAAiB;QAAA+B,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAC3F,EAAA,CAhOED,aAAa;AAAA0G,EAAA,GAAb1G,aAAa;AAkOjB,eAAeA,aAAa;AAAC,IAAA0G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}