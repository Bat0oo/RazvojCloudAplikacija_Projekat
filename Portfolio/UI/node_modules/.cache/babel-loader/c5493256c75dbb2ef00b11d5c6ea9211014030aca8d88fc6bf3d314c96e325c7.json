{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arsenije\\\\source\\\\repos\\\\CloudProjekat\\\\Portfolio\\\\UI\\\\src\\\\Components\\\\Alarm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Header from './Header';\nimport '../styles/Alarm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AlarmPage = () => {\n  _s();\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('user')));\n  const [cryptos, setCryptos] = useState([]);\n  const [cryptoSymbol, setCryptoSymbol] = useState('');\n  const [cryptoName, setCryptoName] = useState('');\n  const [cryptoPrice, setCryptoPrice] = useState(0);\n  const [alarmPrice, setAlarmPrice] = useState(0);\n  const [alarmCondition, setAlarmCondition] = useState('above');\n  const [cryptoOptions, setCryptoOptions] = useState([]);\n  const [transactionHistory, setTransactionHistory] = useState([]);\n  const [alarms, setAlarms] = useState([]);\n  const [currentValues, setCurrentValues] = useState({});\n  const symbolToName = {\n    BTC: 'Bitcoin',\n    ETH: 'Ethereum',\n    USDT: 'Tether',\n    BNB: 'Binancecoin',\n    SOL: 'Solana',\n    STETH: 'Staked-ether',\n    USDC: 'Usd-coin',\n    XRP: 'Ripple',\n    DOGE: 'Dogecoin',\n    TON: 'Ton-crystal',\n    ADA: 'Cardano',\n    AVAX: 'Avalanche-2',\n    SHIB: 'Shiba-inu',\n    WBTC: 'Wrapped-bitcoin',\n    TRX: 'Tron',\n    DOT: 'Polkadot',\n    BCH: 'Bitcoin-cash',\n    LINK: 'Chainlink',\n    NEAR: 'Near',\n    UNI: 'Uniswap'\n  };\n  useEffect(() => {\n    if (user) {\n      getAllCryptos(user.email);\n      getTopCryptoSymbols();\n      getTransactionHistory(user.email);\n      getAllAlarms(user.email);\n      fetchAlarmPrices(); // Odmah nakon Å¡to \n\n      const fetchCurrentCryptoPrices = async () => {\n        const symbols = alarms.map(alarm => alarm.CryptoSymbol.toLowerCase());\n        const prices = {};\n        for (const symbol of symbols) {\n          const currentPrice = await fetchCurrentPrice(symbol);\n          prices[symbol] = currentPrice;\n        }\n        setCurrentValues(prices);\n      };\n      fetchCurrentCryptoPrices();\n    }\n  }, [user]);\n  const getAllCryptos = async userEmail => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/crypto?userEmail=${userEmail}`);\n      setCryptos(response.data);\n    } catch (error) {\n      console.error('Error fetching cryptos:', error);\n    }\n  };\n  const getTransactionHistory = async userEmail => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/crypto/transactions?userEmail=${userEmail}`);\n      setTransactionHistory(response.data);\n    } catch (error) {\n      console.error('Error fetching transaction history:', error);\n    }\n  };\n  const getTopCryptoSymbols = async () => {\n    try {\n      const response = await axios.get('https://api.coingecko.com/api/v3/coins/markets', {\n        params: {\n          vs_currency: 'usd',\n          per_page: 20,\n          page: 1,\n          order: 'market_cap_desc',\n          sparkline: false\n        }\n      });\n      const symbols = response.data.map(crypto => crypto.symbol.toUpperCase());\n      setCryptoOptions(symbols);\n    } catch (error) {\n      console.error('Error fetching top crypto symbols:', error);\n    }\n  };\n  const fetchCurrentPrice = async symbol => {\n    try {\n      const response = await axios.get(`https://api.coinbase.com/v2/prices/${symbol.toUpperCase()}-USD/spot`);\n      return response.data.data.amount;\n    } catch (error) {\n      console.error('Error fetching current price:', error);\n      return null;\n    }\n  };\n  const fetchAlarmPrices = async () => {\n    try {\n      const updatedAlarms = await Promise.all(alarms.map(async alarm => {\n        const currentPrice = await fetchCurrentPrice(alarm.CryptoSymbol.toLowerCase());\n        console.log(`Alarm: ${alarm.alarmId}, Current price: ${currentPrice}`);\n        if (currentPrice !== null) {\n          setCurrentValues(prevValues => ({\n            ...prevValues,\n            [alarm.alarmId]: currentPrice\n          }));\n        }\n        return {\n          ...alarm,\n          currentPrice: currentPrice\n        };\n      }));\n      setAlarms(updatedAlarms);\n    } catch (error) {\n      console.error('Error fetching alarm prices:', error);\n    }\n  };\n  const handleAddAlarm = async () => {\n    try {\n      const alarmId = `${cryptoSymbol}-${Date.now()}`;\n      const newAlarm = {\n        userEmail: user.email,\n        alarmId: alarmId,\n        cryptoSymbol: cryptoSymbol.toUpperCase(),\n        targetPrice: alarmPrice,\n        aboveorbelow: alarmCondition,\n        isTriggered: false\n      };\n      await axios.post('http://localhost:5000/api/alarm', newAlarm);\n      getAllAlarms(user.email);\n    } catch (error) {\n      console.error('Error adding alarm:', error);\n    }\n  };\n  const getAllAlarms = async userEmail => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/alarm?userEmail=${userEmail}`);\n      setAlarms(response.data);\n    } catch (error) {\n      console.error('Error fetching alarms:', error);\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Niste ulogovani.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alarm-container container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container mt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"alarm-form card p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Postavite alarm za kriptovalutu:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Symbol:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            value: cryptoSymbol,\n            onChange: e => setCryptoSymbol(e.target.value.toUpperCase()),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Izaberite simbol\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 29\n            }, this), cryptoOptions.map(symbol => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: symbol.toUpperCase(),\n              children: symbol.toUpperCase()\n            }, symbol, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Ime:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            value: cryptoName,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Ciljana cena:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"number\",\n            value: alarmPrice,\n            onChange: e => setAlarmPrice(parseFloat(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Uslov:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            value: alarmCondition,\n            onChange: e => setAlarmCondition(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"above\",\n              children: \"Iznad\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"below\",\n              children: \"Ispod\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary mt-3\",\n          type: \"button\",\n          onClick: handleAddAlarm,\n          children: \"Postavi alarm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alarm-list mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Aktivni alarmi:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"CryptoSymbol\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Ciljana cena\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Trenutna cena\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Uslov\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: alarms.map(alarm => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: alarm.CryptoSymbol\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [alarm.TargetPrice, \" USD\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: currentValues[alarm.alarmId] !== undefined ? currentValues[alarm.alarmId] : 'Loading...'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: alarm.IsAbove ? 'Iznad' : 'Ispod'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 33\n            }, this)]\n          }, alarm.alarmId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 9\n  }, this);\n};\n_s(AlarmPage, \"zK4MD3Q42/80K3D0io3sJ1BlX5g=\");\n_c = AlarmPage;\nexport default AlarmPage;\nvar _c;\n$RefreshReg$(_c, \"AlarmPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","Header","jsxDEV","_jsxDEV","AlarmPage","_s","user","setUser","JSON","parse","localStorage","getItem","cryptos","setCryptos","cryptoSymbol","setCryptoSymbol","cryptoName","setCryptoName","cryptoPrice","setCryptoPrice","alarmPrice","setAlarmPrice","alarmCondition","setAlarmCondition","cryptoOptions","setCryptoOptions","transactionHistory","setTransactionHistory","alarms","setAlarms","currentValues","setCurrentValues","symbolToName","BTC","ETH","USDT","BNB","SOL","STETH","USDC","XRP","DOGE","TON","ADA","AVAX","SHIB","WBTC","TRX","DOT","BCH","LINK","NEAR","UNI","getAllCryptos","email","getTopCryptoSymbols","getTransactionHistory","getAllAlarms","fetchAlarmPrices","fetchCurrentCryptoPrices","symbols","map","alarm","CryptoSymbol","toLowerCase","prices","symbol","currentPrice","fetchCurrentPrice","userEmail","response","get","data","error","console","params","vs_currency","per_page","page","order","sparkline","crypto","toUpperCase","amount","updatedAlarms","Promise","all","log","alarmId","prevValues","handleAddAlarm","Date","now","newAlarm","targetPrice","aboveorbelow","isTriggered","post","handleLogout","removeItem","children","fileName","_jsxFileName","lineNumber","columnNumber","className","value","onChange","e","target","type","readOnly","parseFloat","onClick","TargetPrice","undefined","IsAbove","_c","$RefreshReg$"],"sources":["C:/Users/Arsenije/source/repos/CloudProjekat/Portfolio/UI/src/Components/Alarm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Header from './Header';\r\nimport '../styles/Alarm.css';\r\n\r\nconst AlarmPage = () => {\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('user')));\r\n    const [cryptos, setCryptos] = useState([]);\r\n    const [cryptoSymbol, setCryptoSymbol] = useState('');\r\n    const [cryptoName, setCryptoName] = useState('');\r\n    const [cryptoPrice, setCryptoPrice] = useState(0);\r\n    const [alarmPrice, setAlarmPrice] = useState(0);\r\n    const [alarmCondition, setAlarmCondition] = useState('above');\r\n    const [cryptoOptions, setCryptoOptions] = useState([]);\r\n    const [transactionHistory, setTransactionHistory] = useState([]);\r\n    const [alarms, setAlarms] = useState([]);\r\n    const [currentValues, setCurrentValues] = useState({});\r\n\r\n    const symbolToName = {\r\n        BTC: 'Bitcoin',\r\n        ETH: 'Ethereum',\r\n        USDT: 'Tether',\r\n        BNB: 'Binancecoin',\r\n        SOL: 'Solana',\r\n        STETH: 'Staked-ether',\r\n        USDC: 'Usd-coin',\r\n        XRP: 'Ripple',\r\n        DOGE: 'Dogecoin',\r\n        TON: 'Ton-crystal',\r\n        ADA: 'Cardano',\r\n        AVAX: 'Avalanche-2',\r\n        SHIB: 'Shiba-inu',\r\n        WBTC: 'Wrapped-bitcoin',\r\n        TRX: 'Tron',\r\n        DOT: 'Polkadot',\r\n        BCH: 'Bitcoin-cash',\r\n        LINK: 'Chainlink',\r\n        NEAR: 'Near',\r\n        UNI: 'Uniswap'\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            getAllCryptos(user.email);\r\n            getTopCryptoSymbols();\r\n            getTransactionHistory(user.email);\r\n            getAllAlarms(user.email);\r\n            fetchAlarmPrices(); // Odmah nakon Å¡to \r\n    \r\n            const fetchCurrentCryptoPrices = async () => {\r\n                const symbols = alarms.map(alarm => alarm.CryptoSymbol.toLowerCase());\r\n                const prices = {};\r\n                for (const symbol of symbols) {\r\n                    const currentPrice = await fetchCurrentPrice(symbol);\r\n                    prices[symbol] = currentPrice;\r\n                }\r\n                setCurrentValues(prices);\r\n            };\r\n    \r\n            fetchCurrentCryptoPrices();\r\n        }\r\n    }, [user]);\r\n    \r\n\r\n    const getAllCryptos = async (userEmail) => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:5000/api/crypto?userEmail=${userEmail}`);\r\n            setCryptos(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching cryptos:', error);\r\n        }\r\n    };\r\n\r\n    const getTransactionHistory = async (userEmail) => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:5000/api/crypto/transactions?userEmail=${userEmail}`);\r\n            setTransactionHistory(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching transaction history:', error);\r\n        }\r\n    };\r\n\r\n    const getTopCryptoSymbols = async () => {\r\n        try {\r\n            const response = await axios.get('https://api.coingecko.com/api/v3/coins/markets', {\r\n                params: {\r\n                    vs_currency: 'usd',\r\n                    per_page: 20,\r\n                    page: 1,\r\n                    order: 'market_cap_desc',\r\n                    sparkline: false\r\n                }\r\n            });\r\n            const symbols = response.data.map(crypto => crypto.symbol.toUpperCase());\r\n            setCryptoOptions(symbols);\r\n        } catch (error) {\r\n            console.error('Error fetching top crypto symbols:', error);\r\n        }\r\n    };\r\n\r\n    const fetchCurrentPrice = async (symbol) => {\r\n        try {\r\n            const response = await axios.get(`https://api.coinbase.com/v2/prices/${symbol.toUpperCase()}-USD/spot`);\r\n            return response.data.data.amount;\r\n        } catch (error) {\r\n            console.error('Error fetching current price:', error);\r\n            return null;\r\n        }\r\n    };\r\n    \r\n    const fetchAlarmPrices = async () => {\r\n        try {\r\n            const updatedAlarms = await Promise.all(\r\n                alarms.map(async (alarm) => {\r\n                    const currentPrice = await fetchCurrentPrice(alarm.CryptoSymbol.toLowerCase());\r\n                    console.log(`Alarm: ${alarm.alarmId}, Current price: ${currentPrice}`);\r\n                    \r\n                    if (currentPrice !== null) {\r\n                        setCurrentValues(prevValues => ({\r\n                            ...prevValues,\r\n                            [alarm.alarmId]: currentPrice\r\n                        }));\r\n                    }\r\n                    \r\n                    return { ...alarm, currentPrice: currentPrice };\r\n                })\r\n            );\r\n            setAlarms(updatedAlarms);\r\n        } catch (error) {\r\n            console.error('Error fetching alarm prices:', error);\r\n        }\r\n    };    \r\n    \r\n\r\n    const handleAddAlarm = async () => {\r\n        try {\r\n            const alarmId = `${cryptoSymbol}-${Date.now()}`;\r\n            const newAlarm = {\r\n                userEmail: user.email,\r\n                alarmId: alarmId,\r\n                cryptoSymbol: cryptoSymbol.toUpperCase(),\r\n                targetPrice: alarmPrice,\r\n                aboveorbelow: alarmCondition,\r\n                isTriggered: false\r\n            };\r\n            await axios.post('http://localhost:5000/api/alarm', newAlarm);\r\n            getAllAlarms(user.email);\r\n        } catch (error) {\r\n            console.error('Error adding alarm:', error);\r\n        }\r\n    };\r\n\r\n    const getAllAlarms = async (userEmail) => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:5000/api/alarm?userEmail=${userEmail}`);\r\n            setAlarms(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching alarms:', error);\r\n        }\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('user');\r\n        setUser(null);\r\n    };\r\n\r\n    if (!user) {\r\n        return <p>Niste ulogovani.</p>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"alarm-container container\">\r\n            <Header />\r\n            <div className=\"form-container mt-4\">\r\n                <form className=\"alarm-form card p-4\">\r\n                    <h3>Postavite alarm za kriptovalutu:</h3>\r\n                    <div className=\"form-group\">\r\n                        <label>Symbol:</label>\r\n                        <select className=\"form-control\" value={cryptoSymbol} onChange={e => setCryptoSymbol(e.target.value.toUpperCase())}>\r\n                            <option value=\"\">Izaberite simbol</option>\r\n                            {cryptoOptions.map(symbol => (\r\n                                <option key={symbol} value={symbol.toUpperCase()}>{symbol.toUpperCase()}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Ime:</label>\r\n                        <input className=\"form-control\" type=\"text\" value={cryptoName} readOnly />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Ciljana cena:</label>\r\n                        <input className=\"form-control\" type=\"number\" value={alarmPrice} onChange={e => setAlarmPrice(parseFloat(e.target.value))} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Uslov:</label>\r\n                        <select className=\"form-control\" value={alarmCondition} onChange={e => setAlarmCondition(e.target.value)}>\r\n                            <option value=\"above\">Iznad</option>\r\n                            <option value=\"below\">Ispod</option>\r\n                        </select>\r\n                    </div>\r\n                    <button className=\"btn btn-primary mt-3\" type=\"button\" onClick={handleAddAlarm}>Postavi alarm</button>\r\n                </form>\r\n            </div>\r\n            <div className=\"alarm-list mt-5\">\r\n                <h3>Aktivni alarmi:</h3>\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>CryptoSymbol</th>\r\n                            <th>Ciljana cena</th>\r\n                            <th>Trenutna cena</th>\r\n                            <th>Uslov</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {alarms.map(alarm => (\r\n                            <tr key={alarm.alarmId}>\r\n                                <td>{alarm.CryptoSymbol}</td>\r\n                                <td>{alarm.TargetPrice} USD</td>\r\n                                <td>{currentValues[alarm.alarmId] !== undefined ? currentValues[alarm.alarmId] : 'Loading...'}</td>\r\n                                <td>{alarm.IsAbove ? 'Iznad' : 'Ispod'}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AlarmPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}