{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arsenije\\\\source\\\\repos\\\\CloudProjekat\\\\Portfolio\\\\UI\\\\src\\\\Components\\\\PortfolioPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../styles/PortfolioPage.css';\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PortfolioPage = () => {\n  _s();\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('user')));\n  const [cryptos, setCryptos] = useState([]);\n  const [cryptoSymbol, setCryptoSymbol] = useState('');\n  const [cryptoName, setCryptoName] = useState('');\n  const [cryptoPrice, setCryptoPrice] = useState(0);\n  const [cryptoAmount, setCryptoAmount] = useState(0);\n  const [cryptoOptions, setCryptoOptions] = useState([]);\n  const symbolToName = {\n    BTC: 'Bitcoin',\n    ETH: 'Ethereum',\n    USDT: 'Tether',\n    BNB: 'Binance Coin',\n    SOL: 'Solana',\n    STETH: 'Staked Ether',\n    USDC: 'USD Coin',\n    XRP: 'XRP',\n    DOGE: 'Dogecoin',\n    TON: 'TON Crystal',\n    ADA: 'Cardano',\n    AVAX: 'Avalanche',\n    SHIB: 'Shiba Inu',\n    WBTC: 'Wrapped Bitcoin',\n    TRX: 'TRON',\n    DOT: 'Polkadot',\n    BCH: 'Bitcoin Cash',\n    LINK: 'Chainlink',\n    NEAR: 'Near Protocol',\n    UNI: 'Uniswap'\n  };\n  useEffect(() => {\n    if (cryptoSymbol) {\n      setCryptoName(symbolToName[cryptoSymbol] || '');\n    }\n  }, [cryptoSymbol]);\n  useEffect(() => {\n    if (user) {\n      getAllCryptos(user.email);\n      getTopCryptoSymbols();\n    }\n  }, [user]);\n  const getAllCryptos = async userEmail => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/crypto?userEmail=${userEmail}`);\n      setCryptos(response.data);\n    } catch (error) {\n      console.error('Error fetching cryptos:', error);\n    }\n  };\n  const getTopCryptoSymbols = async () => {\n    try {\n      const response = await axios.get('https://api.coingecko.com/api/v3/coins/markets', {\n        params: {\n          vs_currency: 'usd',\n          per_page: 20,\n          page: 1,\n          order: 'market_cap_desc',\n          sparkline: false\n        }\n      });\n      const symbols = response.data.map(crypto => crypto.symbol);\n      setCryptoOptions(symbols);\n    } catch (error) {\n      console.error('Error fetching top crypto symbols:', error);\n    }\n  };\n  const getCryptoPrice = async symbol => {\n    try {\n      var _response$data$symbol;\n      const response = await axios.get(`https://api.coingecko.com/api/v3/simple/price?ids=${symbol}&vs_currencies=usd`);\n      const price = (_response$data$symbol = response.data[symbol]) === null || _response$data$symbol === void 0 ? void 0 : _response$data$symbol.usd;\n      setCryptoPrice(price);\n      setCryptoName(symbolToName[symbol] || symbol.toUpperCase());\n    } catch (error) {\n      console.error(`Error fetching price for ${symbol}:`, error);\n    }\n  };\n  const handleAddOrBuyCrypto = async () => {\n    try {\n      const existingCrypto = cryptos.find(c => c.Symbol === cryptoSymbol);\n      if (existingCrypto) {\n        await axios.post(`http://localhost:5000/api/crypto/buy`, {\n          userEmail: user.email,\n          symbol: cryptoSymbol,\n          amount: cryptoAmount,\n          price: cryptoPrice\n        });\n      } else {\n        await axios.post(`http://localhost:5000/api/crypto`, {\n          userEmail: user.email,\n          name: cryptoName,\n          currentPrice: cryptoPrice,\n          symbol: cryptoSymbol,\n          amount: cryptoAmount\n        });\n      }\n      getAllCryptos(user.email);\n    } catch (error) {\n      console.error('Error adding or buying crypto:', error);\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Niste ulogovani.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 14\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Dobrodo\\u0161li, \", user.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Ovo je va\\u0161a portfolio stranica.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Va\\u0161e kriptovalute:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        textAlign: 'left'\n      },\n      children: cryptos.map(crypto => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [crypto.Name, \" (\", crypto.Symbol, \") - \", crypto.Amount, \" - \", crypto.CurrentPrice]\n      }, crypto.RowKey, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"crypto-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Unesite informacije o kriptovaluti:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Symbol:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: cryptoSymbol,\n          onChange: e => setCryptoSymbol(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Izaberite simbol\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), cryptoOptions.map(symbol => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: symbol,\n            children: symbol.toUpperCase()\n          }, symbol, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Ime:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: cryptoName,\n          onChange: e => setCryptoName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Cena:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: cryptoPrice,\n          onChange: e => setCryptoPrice(parseFloat(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Koli\\u010Dina:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: cryptoAmount,\n          onChange: e => setCryptoAmount(parseFloat(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleAddOrBuyCrypto,\n        children: \"Buy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 7\n  }, this);\n};\n_s(PortfolioPage, \"T4AbKiRtX1BYRAOyZ5cbdIBWObI=\");\n_c = PortfolioPage;\nexport default PortfolioPage;\nvar _c;\n$RefreshReg$(_c, \"PortfolioPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","Header","jsxDEV","_jsxDEV","PortfolioPage","_s","user","setUser","JSON","parse","localStorage","getItem","cryptos","setCryptos","cryptoSymbol","setCryptoSymbol","cryptoName","setCryptoName","cryptoPrice","setCryptoPrice","cryptoAmount","setCryptoAmount","cryptoOptions","setCryptoOptions","symbolToName","BTC","ETH","USDT","BNB","SOL","STETH","USDC","XRP","DOGE","TON","ADA","AVAX","SHIB","WBTC","TRX","DOT","BCH","LINK","NEAR","UNI","getAllCryptos","email","getTopCryptoSymbols","userEmail","response","get","data","error","console","params","vs_currency","per_page","page","order","sparkline","symbols","map","crypto","symbol","getCryptoPrice","_response$data$symbol","price","usd","toUpperCase","handleAddOrBuyCrypto","existingCrypto","find","c","Symbol","post","amount","name","currentPrice","handleLogout","removeItem","children","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","onClick","Name","Amount","CurrentPrice","RowKey","className","value","onChange","e","target","type","parseFloat","_c","$RefreshReg$"],"sources":["C:/Users/Arsenije/source/repos/CloudProjekat/Portfolio/UI/src/Components/PortfolioPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport '../styles/PortfolioPage.css';\r\nimport Header from './Header';\r\n\r\nconst PortfolioPage = () => {\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('user')));\r\n    const [cryptos, setCryptos] = useState([]);\r\n    const [cryptoSymbol, setCryptoSymbol] = useState('');\r\n    const [cryptoName, setCryptoName] = useState('');\r\n    const [cryptoPrice, setCryptoPrice] = useState(0);\r\n    const [cryptoAmount, setCryptoAmount] = useState(0);\r\n    const [cryptoOptions, setCryptoOptions] = useState([]);\r\n\r\n    const symbolToName = {\r\n        BTC: 'Bitcoin', ETH: 'Ethereum', USDT: 'Tether', BNB: 'Binance Coin', SOL: 'Solana', STETH: 'Staked Ether', USDC: 'USD Coin', XRP: 'XRP', DOGE: 'Dogecoin', TON: 'TON Crystal', ADA: 'Cardano', AVAX: 'Avalanche', SHIB: 'Shiba Inu', WBTC: 'Wrapped Bitcoin', TRX: 'TRON', DOT: 'Polkadot', BCH: 'Bitcoin Cash', LINK: 'Chainlink', NEAR: 'Near Protocol', UNI: 'Uniswap'\r\n      };\r\n\r\n      useEffect(() => {\r\n        if (cryptoSymbol) {\r\n          setCryptoName(symbolToName[cryptoSymbol] || '');\r\n        }\r\n      }, [cryptoSymbol]);     \r\n      \r\n\r\n    useEffect(() => {\r\n      if (user) {\r\n        getAllCryptos(user.email);\r\n        getTopCryptoSymbols();\r\n      }\r\n    }, [user]);\r\n  \r\n    const getAllCryptos = async (userEmail) => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/crypto?userEmail=${userEmail}`);\r\n        setCryptos(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching cryptos:', error);\r\n      }\r\n    };\r\n  \r\n    const getTopCryptoSymbols = async () => {\r\n      try {\r\n        const response = await axios.get('https://api.coingecko.com/api/v3/coins/markets', {\r\n          params: {\r\n            vs_currency: 'usd',\r\n            per_page: 20,\r\n            page: 1,\r\n            order: 'market_cap_desc',\r\n            sparkline: false\r\n          }\r\n        });\r\n        const symbols = response.data.map(crypto => crypto.symbol);\r\n        setCryptoOptions(symbols);\r\n      } catch (error) {\r\n        console.error('Error fetching top crypto symbols:', error);\r\n      }\r\n    };\r\n  \r\n    const getCryptoPrice = async (symbol) => {\r\n        try {\r\n          const response = await axios.get(`https://api.coingecko.com/api/v3/simple/price?ids=${symbol}&vs_currencies=usd`);\r\n          const price = response.data[symbol]?.usd;\r\n          setCryptoPrice(price);\r\n          setCryptoName(symbolToName[symbol] || symbol.toUpperCase());\r\n        } catch (error) {\r\n          console.error(`Error fetching price for ${symbol}:`, error);\r\n        }\r\n      };\r\n      \r\n  \r\n    const handleAddOrBuyCrypto = async () => {\r\n      try {\r\n        const existingCrypto = cryptos.find(c => c.Symbol === cryptoSymbol);\r\n  \r\n        if (existingCrypto) {\r\n          await axios.post(`http://localhost:5000/api/crypto/buy`, {\r\n            userEmail: user.email,\r\n            symbol: cryptoSymbol,\r\n            amount: cryptoAmount,\r\n            price: cryptoPrice\r\n          });\r\n        } else {\r\n          await axios.post(`http://localhost:5000/api/crypto`, {\r\n            userEmail: user.email,\r\n            name: cryptoName,\r\n            currentPrice: cryptoPrice,\r\n            symbol: cryptoSymbol,\r\n            amount: cryptoAmount\r\n          });\r\n        }\r\n        getAllCryptos(user.email);\r\n      } catch (error) {\r\n        console.error('Error adding or buying crypto:', error);\r\n      }\r\n    };\r\n  \r\n    const handleLogout = () => {\r\n      localStorage.removeItem('user');\r\n      setUser(null);\r\n    };\r\n  \r\n    if (!user) {\r\n      return <p>Niste ulogovani.</p>;\r\n    }\r\n  \r\n    return (\r\n      <div style={{ textAlign: 'center' }}>\r\n        <Header />\r\n        <h2>Dobrodošli, {user.email}</h2>\r\n        <button onClick={handleLogout}>Logout</button>\r\n        <p>Ovo je vaša portfolio stranica.</p>\r\n        <h3>Vaše kriptovalute:</h3>\r\n        <ul style={{ textAlign: 'left' }}>\r\n          {cryptos.map(crypto => (\r\n            <li key={crypto.RowKey}>\r\n              {crypto.Name} ({crypto.Symbol}) - {crypto.Amount} - {crypto.CurrentPrice}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <form className=\"crypto-form\">\r\n          <h3>Unesite informacije o kriptovaluti:</h3>\r\n          <label>\r\n            Symbol:\r\n            <select value={cryptoSymbol} onChange={e => setCryptoSymbol(e.target.value)}>\r\n              <option value=\"\">Izaberite simbol</option>\r\n              {cryptoOptions.map(symbol => (\r\n                <option key={symbol} value={symbol}>{symbol.toUpperCase()}</option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n          <br />\r\n          <label>\r\n            Ime:\r\n            <input\r\n              type=\"text\"\r\n              value={cryptoName}\r\n              onChange={e => setCryptoName(e.target.value)}\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            Cena:\r\n            <input\r\n              type=\"number\"\r\n              value={cryptoPrice}\r\n              onChange={e => setCryptoPrice(parseFloat(e.target.value))}\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            Količina:\r\n            <input\r\n              type=\"number\"\r\n              value={cryptoAmount}\r\n              onChange={e => setCryptoAmount(parseFloat(e.target.value))}\r\n            />\r\n          </label>\r\n          <br />\r\n          <button type=\"button\" onClick={handleAddOrBuyCrypto}>Buy</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default PortfolioPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}