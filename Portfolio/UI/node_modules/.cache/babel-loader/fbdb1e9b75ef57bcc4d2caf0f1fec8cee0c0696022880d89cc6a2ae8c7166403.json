{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arsenije\\\\source\\\\repos\\\\CloudProjekat\\\\Portfolio\\\\UI\\\\src\\\\Components\\\\PortfolioPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../styles/PortfolioPage.css';\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PortfolioPage = () => {\n  _s();\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('user')));\n  const [cryptos, setCryptos] = useState([]);\n  const [cryptoSymbol, setCryptoSymbol] = useState('');\n  const [cryptoName, setCryptoName] = useState('');\n  const [cryptoPrice, setCryptoPrice] = useState(0);\n  const [cryptoAmount, setCryptoAmount] = useState(0);\n  const [cryptoOptions, setCryptoOptions] = useState([]);\n  const [transactionHistory, setTransactionHistory] = useState([]);\n  const symbolToName = {\n    BTC: 'Bitcoin',\n    ETH: 'Ethereum',\n    USDT: 'Tether',\n    BNB: 'Binance Coin',\n    SOL: 'Solana',\n    STETH: 'Staked Ether',\n    USDC: 'USD Coin',\n    XRP: 'XRP',\n    DOGE: 'Dogecoin',\n    TON: 'TON Crystal',\n    ADA: 'Cardano',\n    AVAX: 'Avalanche',\n    SHIB: 'Shiba Inu',\n    WBTC: 'Wrapped Bitcoin',\n    TRX: 'TRON',\n    DOT: 'Polkadot',\n    BCH: 'Bitcoin Cash',\n    LINK: 'Chainlink',\n    NEAR: 'Near Protocol',\n    UNI: 'Uniswap'\n  };\n  useEffect(() => {\n    if (cryptoSymbol) {\n      setCryptoName(symbolToName[cryptoSymbol.toUpperCase()] || '');\n    }\n  }, [cryptoSymbol]);\n  useEffect(() => {\n    if (user) {\n      getAllCryptos(user.email);\n      getTopCryptoSymbols();\n      getTransactionHistory(user.email);\n    }\n  }, [user]);\n  useEffect(() => {\n    transactionHistory.sort((a, b) => new Date(b.TransactionDate) - new Date(a.TransactionDate));\n  }, [transactionHistory]);\n  const getAllCryptos = async userEmail => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/crypto?userEmail=${userEmail}`);\n      setCryptos(response.data);\n    } catch (error) {\n      console.error('Error fetching cryptos:', error);\n    }\n  };\n  const getTransactionHistory = async userEmail => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/crypto/transactions?userEmail=${userEmail}`);\n      setTransactionHistory(response.data);\n    } catch (error) {\n      console.error('Error fetching transaction history:', error);\n    }\n  };\n  const handleSellCrypto = async () => {\n    try {\n      const existingCrypto = cryptos.find(c => c.Symbol === cryptoSymbol.toUpperCase());\n      if (existingCrypto) {\n        await axios.post(`http://localhost:5000/api/crypto/sell`, {\n          userEmail: user.email,\n          symbol: cryptoSymbol.toUpperCase(),\n          amount: cryptoAmount\n        });\n      } else {\n        console.error('Kriptovaluta koju pokušavate da prodate nije pronađena.');\n      }\n      getAllCryptos(user.email);\n      getTransactionHistory(user.email);\n    } catch (error) {\n      console.error('Greška prilikom prodaje kriptovalute:', error);\n    }\n  };\n  const getTopCryptoSymbols = async () => {\n    try {\n      const response = await axios.get('https://api.coingecko.com/api/v3/coins/markets', {\n        params: {\n          vs_currency: 'usd',\n          per_page: 20,\n          page: 1,\n          order: 'market_cap_desc',\n          sparkline: false\n        }\n      });\n      const symbols = response.data.map(crypto => crypto.symbol);\n      setCryptoOptions(symbols);\n    } catch (error) {\n      console.error('Error fetching top crypto symbols:', error);\n    }\n  };\n  const handleAddOrBuyCrypto = async () => {\n    try {\n      const existingCrypto = cryptos.find(c => c.Symbol === cryptoSymbol.toUpperCase());\n      if (existingCrypto) {\n        await axios.post(`http://localhost:5000/api/crypto/buy`, {\n          userEmail: user.email,\n          symbol: cryptoSymbol.toUpperCase(),\n          amount: cryptoAmount,\n          price: cryptoPrice\n        });\n      } else {\n        await axios.post(`http://localhost:5000/api/crypto`, {\n          userEmail: user.email,\n          name: cryptoName,\n          symbol: cryptoSymbol.toUpperCase(),\n          amount: cryptoAmount,\n          currentPrice: cryptoPrice\n        });\n      }\n      getAllCryptos(user.email);\n      getTransactionHistory(user.email);\n    } catch (error) {\n      console.error('Error adding or buying crypto:', error);\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Niste ulogovani.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"portfolio-container container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mt-4\",\n      children: [\"Dobrodo\\u0161li, \", user.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-danger mt-2\",\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4\",\n      children: \"Ovo je va\\u0161a portfolio stranica.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"crypto-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mt-4\",\n        children: \"Va\\u0161e kriptovalute:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group\",\n        children: cryptos.map(crypto => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: [crypto.Name, \" (\", crypto.Symbol, \") - \", crypto.Amount.toFixed(3)]\n        }, crypto.RowKey, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container mt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"crypto-form card p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Unesite informacije o kriptovaluti:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Symbol:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            value: cryptoSymbol,\n            onChange: e => setCryptoSymbol(e.target.value.toUpperCase()),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Izaberite simbol\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 29\n            }, this), cryptoOptions.map(symbol => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: symbol.toUpperCase(),\n              children: symbol.toUpperCase()\n            }, symbol, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Ime:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            value: cryptoName,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Cena:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"number\",\n            value: cryptoPrice,\n            onChange: e => setCryptoPrice(parseFloat(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Koli\\u010Dina:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"number\",\n            value: cryptoAmount,\n            onChange: e => setCryptoAmount(parseFloat(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary mr-2\",\n          type: \"button\",\n          onClick: handleAddOrBuyCrypto,\n          children: \"Buy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          type: \"button\",\n          onClick: handleSellCrypto,\n          children: \"Prodaj\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transaction-history mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Istorija transakcija:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Simbol\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Datum\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Koli\\u010Dina\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Cena\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Ukupna vrednost\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Tip transakcije\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: transactionHistory.map(transaction => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.CryptoSymbol\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(transaction.TransactionDate).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.Amount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.Price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.TotalValue\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.IsPurchase ? 'Kupovina' : 'Prodaja'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 21\n            }, this)]\n          }, transaction.RowKey, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 9\n  }, this);\n};\n_s(PortfolioPage, \"AlXnAlZr3iX1UakdKKOTObTn770=\");\n_c = PortfolioPage;\nexport default PortfolioPage;\nvar _c;\n$RefreshReg$(_c, \"PortfolioPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","Header","jsxDEV","_jsxDEV","PortfolioPage","_s","user","setUser","JSON","parse","localStorage","getItem","cryptos","setCryptos","cryptoSymbol","setCryptoSymbol","cryptoName","setCryptoName","cryptoPrice","setCryptoPrice","cryptoAmount","setCryptoAmount","cryptoOptions","setCryptoOptions","transactionHistory","setTransactionHistory","symbolToName","BTC","ETH","USDT","BNB","SOL","STETH","USDC","XRP","DOGE","TON","ADA","AVAX","SHIB","WBTC","TRX","DOT","BCH","LINK","NEAR","UNI","toUpperCase","getAllCryptos","email","getTopCryptoSymbols","getTransactionHistory","sort","a","b","Date","TransactionDate","userEmail","response","get","data","error","console","handleSellCrypto","existingCrypto","find","c","Symbol","post","symbol","amount","params","vs_currency","per_page","page","order","sparkline","symbols","map","crypto","handleAddOrBuyCrypto","price","name","currentPrice","handleLogout","removeItem","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","Name","Amount","toFixed","RowKey","value","onChange","e","target","type","readOnly","parseFloat","transaction","CryptoSymbol","toLocaleString","Price","TotalValue","IsPurchase","_c","$RefreshReg$"],"sources":["C:/Users/Arsenije/source/repos/CloudProjekat/Portfolio/UI/src/Components/PortfolioPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport '../styles/PortfolioPage.css';\r\nimport Header from './Header';\r\n\r\nconst PortfolioPage = () => {\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('user')));\r\n    const [cryptos, setCryptos] = useState([]);\r\n    const [cryptoSymbol, setCryptoSymbol] = useState('');\r\n    const [cryptoName, setCryptoName] = useState('');\r\n    const [cryptoPrice, setCryptoPrice] = useState(0);\r\n    const [cryptoAmount, setCryptoAmount] = useState(0);\r\n    const [cryptoOptions, setCryptoOptions] = useState([]);\r\n    const [transactionHistory, setTransactionHistory] = useState([]);\r\n\r\n    const symbolToName = {\r\n        BTC: 'Bitcoin', ETH: 'Ethereum', USDT: 'Tether', BNB: 'Binance Coin', SOL: 'Solana', STETH: 'Staked Ether', USDC: 'USD Coin', XRP: 'XRP', DOGE: 'Dogecoin', TON: 'TON Crystal', ADA: 'Cardano', AVAX: 'Avalanche', SHIB: 'Shiba Inu', WBTC: 'Wrapped Bitcoin', TRX: 'TRON', DOT: 'Polkadot', BCH: 'Bitcoin Cash', LINK: 'Chainlink', NEAR: 'Near Protocol', UNI: 'Uniswap'\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (cryptoSymbol) {\r\n            setCryptoName(symbolToName[cryptoSymbol.toUpperCase()] || '');\r\n        }\r\n    }, [cryptoSymbol]);\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            getAllCryptos(user.email);\r\n            getTopCryptoSymbols();\r\n            getTransactionHistory(user.email);\r\n        }\r\n    }, [user]);\r\n\r\n    useEffect(() => {\r\n        transactionHistory.sort((a, b) => new Date(b.TransactionDate) - new Date(a.TransactionDate));\r\n    }, [transactionHistory]);\r\n\r\n    const getAllCryptos = async (userEmail) => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:5000/api/crypto?userEmail=${userEmail}`);\r\n            setCryptos(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching cryptos:', error);\r\n        }\r\n    };\r\n\r\n    const getTransactionHistory = async (userEmail) => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:5000/api/crypto/transactions?userEmail=${userEmail}`);\r\n            setTransactionHistory(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching transaction history:', error);\r\n        }\r\n    };\r\n\r\n    const handleSellCrypto = async () => {\r\n        try {\r\n            const existingCrypto = cryptos.find(c => c.Symbol === cryptoSymbol.toUpperCase());\r\n\r\n            if (existingCrypto) {\r\n                await axios.post(`http://localhost:5000/api/crypto/sell`, {\r\n                    userEmail: user.email,\r\n                    symbol: cryptoSymbol.toUpperCase(),\r\n                    amount: cryptoAmount\r\n                });\r\n            } else {\r\n                console.error('Kriptovaluta koju pokušavate da prodate nije pronađena.');\r\n            }\r\n            getAllCryptos(user.email);\r\n            getTransactionHistory(user.email);\r\n        } catch (error) {\r\n            console.error('Greška prilikom prodaje kriptovalute:', error);\r\n        }\r\n    };\r\n\r\n    const getTopCryptoSymbols = async () => {\r\n        try {\r\n            const response = await axios.get('https://api.coingecko.com/api/v3/coins/markets', {\r\n                params: {\r\n                    vs_currency: 'usd',\r\n                    per_page: 20,\r\n                    page: 1,\r\n                    order: 'market_cap_desc',\r\n                    sparkline: false\r\n                }\r\n            });\r\n            const symbols = response.data.map(crypto => crypto.symbol);\r\n            setCryptoOptions(symbols);\r\n        } catch (error) {\r\n            console.error('Error fetching top crypto symbols:', error);\r\n        }\r\n    };\r\n\r\n    const handleAddOrBuyCrypto = async () => {\r\n        try {\r\n            const existingCrypto = cryptos.find(c => c.Symbol === cryptoSymbol.toUpperCase());\r\n\r\n            if (existingCrypto) {\r\n                await axios.post(`http://localhost:5000/api/crypto/buy`, {\r\n                    userEmail: user.email,\r\n                    symbol: cryptoSymbol.toUpperCase(),\r\n                    amount: cryptoAmount,\r\n                    price: cryptoPrice\r\n                });\r\n            } else {\r\n                await axios.post(`http://localhost:5000/api/crypto`, {\r\n                    userEmail: user.email,\r\n                    name: cryptoName,\r\n                    symbol: cryptoSymbol.toUpperCase(),\r\n                    amount: cryptoAmount,\r\n                    currentPrice: cryptoPrice\r\n                });\r\n            }\r\n            getAllCryptos(user.email);\r\n            getTransactionHistory(user.email);\r\n        } catch (error) {\r\n            console.error('Error adding or buying crypto:', error);\r\n        }\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('user');\r\n        setUser(null);\r\n    };\r\n\r\n    if (!user) {\r\n        return <p>Niste ulogovani.</p>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"portfolio-container container\">\r\n            <Header />\r\n            <h2 className=\"mt-4\">Dobrodošli, {user.email}</h2>\r\n            <button className=\"btn btn-danger mt-2\" onClick={handleLogout}>Logout</button>\r\n            <p className=\"mt-4\">Ovo je vaša portfolio stranica.</p>\r\n            <div className=\"crypto-container\">\r\n                <h3 className=\"mt-4\">Vaše kriptovalute:</h3>\r\n                <ul className=\"list-group\">\r\n                    {cryptos.map(crypto => (\r\n                        <li className=\"list-group-item\" key={crypto.RowKey}>\r\n                            {crypto.Name} ({crypto.Symbol}) - {crypto.Amount.toFixed(3)}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            <div className=\"form-container mt-4\">\r\n                <form className=\"crypto-form card p-4\">\r\n                    <h3>Unesite informacije o kriptovaluti:</h3>\r\n                    <div className=\"form-group\">\r\n                        <label>Symbol:</label>\r\n                        <select className=\"form-control\" value={cryptoSymbol} onChange={e => setCryptoSymbol(e.target.value.toUpperCase())}>\r\n                            <option value=\"\">Izaberite simbol</option>\r\n                            {cryptoOptions.map(symbol => (\r\n                                <option key={symbol} value={symbol.toUpperCase()}>{symbol.toUpperCase()}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Ime:</label>\r\n                        <input className=\"form-control\" type=\"text\" value={cryptoName} readOnly />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Cena:</label>\r\n                        <input className=\"form-control\" type=\"number\" value={cryptoPrice} onChange={e => setCryptoPrice(parseFloat(e.target.value))} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Količina:</label>\r\n                        <input className=\"form-control\" type=\"number\" value={cryptoAmount} onChange={e => setCryptoAmount(parseFloat(e.target.value))} />\r\n                    </div>\r\n                    <button className=\"btn btn-primary mr-2\" type=\"button\" onClick={handleAddOrBuyCrypto}>Buy</button>\r\n                    <button className=\"btn btn-secondary\" type=\"button\" onClick={handleSellCrypto}>Prodaj</button>\r\n                </form>\r\n            </div>\r\n            <div className=\"transaction-history mt-5\">\r\n    <h3>Istorija transakcija:</h3>\r\n    <table className=\"table\">\r\n        <thead>\r\n            <tr>\r\n                <th>Simbol</th>\r\n                <th>Datum</th>\r\n                <th>Količina</th>\r\n                <th>Cena</th>\r\n                <th>Ukupna vrednost</th>\r\n                <th>Tip transakcije</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {transactionHistory.map(transaction => (\r\n                <tr key={transaction.RowKey}>\r\n                    <td>{transaction.CryptoSymbol}</td>\r\n                    <td>{new Date(transaction.TransactionDate).toLocaleString()}</td>\r\n                    <td>{transaction.Amount}</td>\r\n                    <td>{transaction.Price}</td>\r\n                    <td>{transaction.TotalValue}</td>\r\n                    <td>{transaction.IsPurchase ? 'Kupovina' : 'Prodaja'}</td>\r\n                </tr>\r\n            ))}\r\n        </tbody>\r\n    </table>\r\n</div>\r\n</div>\r\n    );\r\n};\r\n\r\nexport default PortfolioPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}